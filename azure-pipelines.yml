# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  controllerVersion: '1.1.0'
  netVersion: '2.1.x'
  solutionToAnalyse: $(Build.SourcesDirectory)

steps:
- bash: |
    if [ -z "$netVersion" ]; then
      echo "##vso[task.logissue type=error;]Missing template parameter \"netVersion\""
      echo "##vso[task.complete result=Failed;]"
    fi
    if [ -z "$solutionToAnalyse" ]; then
      echo "##vso[task.logissue type=error;]Missing template parameter \"solutionToAnalyse\""
      echo "##vso[task.complete result=Failed;]"
    fi
  env:
    netVersion: $(netVersion)
    solutionToAnalyse: $(solutionToAnalyse)
  displayName: 'Check for required parameters'
- task: DownloadPackage@1
  displayName: 'Download Fortify SCA Tool'
  inputs:
    packageType: 'upack'
    feed: 'ReleasePackages'
    definition: 'xp.fortify-controller.linux-x64'
    version: $(controllerVersion)
    downloadPath: '$(Agent.ToolsDirectory)/fortify/'
- task: UseDotNet@2
  displayName: 'Install .net core SDK'
  inputs:
    packageType: 'sdk'
    version: $(netVersion)
- script: '$(Agent.ToolsDirectory)/dotnet/dotnet $(Agent.ToolsDirectory)/fortify/XP.FortifyControllerV2.dll $(solutionToAnalyse)'
  displayName: 'Run Fortify'


- bash: |
      git config --global user.name "optidevopsxp"
      git config --global user.password "!QrsK*P959Q@ee"
      git config --global --add url."git@github.com:".insteadOf "https://github.com/"
      git remote set-url origin https://github.com/optidevopsxp/test-repo.git
      git push

      



- script: echo Hello, world!
  displayName: 'RUN HELLO WORLD!'
